C51 COMPILER V9.52.0.0   MAIN                                                              04/21/2015 13:47:48 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Program Files (x86)\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <REGX52.H>
   2          #include <intrins.h>
   3          
   4          sbit temperature=P1^0; 
   5          
   6          #define lcdrs P2_0
   7          #define lcdrw P2_1
   8          #define lcden P2_2
   9          #define beep P3_6
  10          
  11          unsigned char jtmpvl[19];
  12          unsigned char receive;
  13          bit flag;
  14          int judge;
  15          unsigned char a;
  16          void uart_init();
  17          void uart_send_data(unsigned char Data);
  18          void uart_send_string(unsigned char *s);
  19          void delay(unsigned int z);
  20          void ds18b20_init(void);
  21          void ds18b20_wait(void);
  22          bit ds18b20_read_bit(void);
  23          unsigned char ds18b20_read_byte(void);
  24          void ds18b20_write_byte(unsigned char dat);
  25          void ds18b20_send_change_command(void);
  26          void ds18b20_send_read_command(void);
  27          int ds18b20_get_temperature(void);
  28          void lcd_write_com(unsigned char com);
  29          void lcd_write_data(unsigned char date);
  30          void lcd_init();
  31          
  32          void main(){
  33   1        int tmpvl;
  34   1        receive=0;
  35   1        judge = 50;
  36   1        uart_init();
  37   1        lcd_init();
  38   1        delay(50);
  39   1        uart_send_string("AT+CIPMUX=1\r\n");
  40   1        delay(100);
  41   1        uart_send_string("AT+CIPSERVER=1,8081\r\n");
  42   1        delay(100);
  43   1        uart_send_string("AT+CIPSTO=2880\r\n");
  44   1        delay(5000);
  45   1        ds18b20_send_change_command();
  46   1        while(1){
  47   2          tmpvl=ds18b20_get_temperature();
  48   2          uart_send_string("AT+CIPSEND=0,2\r\n");
  49   2          delay(10);
  50   2          uart_send_data(0x30+tmpvl%100/10);
  51   2          delay(5);
  52   2          uart_send_data(0x30+tmpvl%10);
  53   2          delay(1000);
  54   2          lcd_write_com(0x87);
  55   2          lcd_write_data(0x30+tmpvl%100/10);
C51 COMPILER V9.52.0.0   MAIN                                                              04/21/2015 13:47:48 PAGE 2   

  56   2          lcd_write_com(0x88);
  57   2          lcd_write_data(0x30+tmpvl%10);
  58   2          lcd_write_com(0x89);
  59   2          lcd_write_data('C');
  60   2          ds18b20_send_change_command();
  61   2      //    lcd_write_com(0x8A);
  62   2      //    lcd_write_data(jtmpvl[1]);
  63   2      //    lcd_write_com(0x8B);
  64   2      //    lcd_write_data(jtmpvl[2]);
  65   2          delay(1000);
  66   2          ds18b20_send_change_command();
  67   2          if(tmpvl > judge)
  68   2          {
  69   3            beep = 0;
  70   3          }
  71   2        }
  72   1      }
  73          
  74          void uart_init(){
  75   1        PCON &= 0X7F;//0111.1111
  76   1        SCON = 0X50;
  77   1        TMOD = 0X20;
  78   1        TH1 = 0XFD;//9600bps
  79   1        TL1 = 0XFD;
  80   1        ET1 = 0;
  81   1        TR1 = 1;
  82   1        REN = 1;
  83   1        SM0 = 1;
  84   1        SM1 = 1;
  85   1        EA = 1;
  86   1        ES = 1;
  87   1      }
  88          
  89          void ser() interrupt 4
  90          {
  91   1        RI = 0;
  92   1        a = SBUF;
  93   1        if(a == '$')
  94   1        {
  95   2      //    jtmpvl[1]='1';
  96   2      //    jtmpvl[2]='2';
  97   2          judge = 28;
  98   2        }
  99   1      //  if(flag == 1)
 100   1      //  {
 101   1      //    jtmpvl[receive] = a;
 102   1      //    receive++;
 103   1      //  }
 104   1      //  if(receive == 3)
 105   1      //  {
 106   1      //    receive = 0;
 107   1      //    flag = 0;
 108   1      //  }
 109   1      }
 110          
 111          void uart_send_data(unsigned char Data){
 112   1        ES = 0;
 113   1        TI = 0;
 114   1        SBUF = Data;
 115   1        while(TI == 0);
 116   1        TI = 0;
 117   1        ES = 1;
C51 COMPILER V9.52.0.0   MAIN                                                              04/21/2015 13:47:48 PAGE 3   

 118   1      }
 119          
 120          void uart_send_string(unsigned char *s){
 121   1        while(*s){
 122   2          uart_send_data(*s++);
 123   2        }
 124   1      }
 125          
 126          void delay(unsigned int z){
 127   1        unsigned int x,y;
 128   1        for(x=z;x>0;x--){
 129   2          for(y=110;y>0;y--);
 130   2        }
 131   1      }
 132          
 133          void ds18b20_init(void){
 134   1        unsigned int i;
 135   1        temperature=0;
 136   1        i=100;
 137   1        while(i>0)
 138   1          i--;
 139   1        temperature=1;
 140   1        i=4;
 141   1        while(i>0)
 142   1          i--;
 143   1      }
 144          //DS18B20等待函数
 145          void ds18b20_wait(void){
 146   1        unsigned int i;
 147   1        while(temperature);
 148   1        while(~temperature);//IO口电平取反
 149   1        i=4;
 150   1        while(i>0)
 151   1          i--;
 152   1      }
 153          //DS18B20读取一位数据
 154          bit ds18b20_read_bit(void){
 155   1        unsigned int i;
 156   1        bit b;
 157   1        temperature=0;
 158   1        i++;
 159   1        temperature=1;
 160   1        i++;
 161   1        i++;
 162   1        b=temperature;
 163   1        i=8;
 164   1        while(i>0)
 165   1          i--;
 166   1        return b;
 167   1      }
 168          //DS18B20读取数据
 169          unsigned char ds18b20_read_byte(void){
 170   1        unsigned int i;
 171   1        unsigned char j,dat;
 172   1        dat=0;
 173   1        for(i=0;i<8;i++){
 174   2          j=ds18b20_read_bit();
 175   2          dat=(j<<7)|(dat>>1);
 176   2        }
 177   1        return dat;
 178   1      }
 179          //DS18B20写一位函数
C51 COMPILER V9.52.0.0   MAIN                                                              04/21/2015 13:47:48 PAGE 4   

 180          void ds18b20_write_byte(unsigned char dat){
 181   1        unsigned int i;
 182   1        unsigned char j;
 183   1        bit b;
 184   1        for(j=0;j<8;j++){
 185   2          b=dat&0x01;
 186   2          dat>>=1;
 187   2          if(b){
 188   3            temperature=0;
 189   3            temperature=1;
 190   3            i=8;
 191   3            while(i>0)
 192   3              i--;
 193   3          }
 194   2          else{
 195   3            temperature=0;
 196   3            i=8;
 197   3            while(i>0)
 198   3              i--;
 199   3            temperature=1;
 200   3            i++;
 201   3            i++;
 202   3          }
 203   2        }
 204   1      }
 205          //DS18B20发送变换命令
 206          void ds18b20_send_change_command(void){
 207   1        ds18b20_init();
 208   1        ds18b20_wait();
 209   1        delay(1);
 210   1        ds18b20_write_byte(0xcc);
 211   1        ds18b20_write_byte(0x44);
 212   1      }
 213          //DS18B20发送读取命令
 214          void ds18b20_send_read_command(void){
 215   1        ds18b20_init();
 216   1        ds18b20_wait();
 217   1        delay(1);
 218   1        ds18b20_write_byte(0xcc);
 219   1        ds18b20_write_byte(0xbe);
 220   1      }
 221          //DS18B20读取温度
 222          int ds18b20_get_temperature(void){
 223   1        unsigned int tmpvalue;
 224   1        int value;
 225   1        float t;
 226   1        unsigned char low,high;
 227   1        ds18b20_send_read_command();
 228   1        low=ds18b20_read_byte();
 229   1        high=ds18b20_read_byte();
 230   1        tmpvalue=high;
 231   1        tmpvalue<<=8;
 232   1        tmpvalue|=low;
 233   1        value=tmpvalue;
 234   1        t=value*0.0625;
 235   1        value=t+(value>0?0.5:-0.5);//判断VALUE的值，如果大于0，则加0.5否则-0.5
 236   1        return value;
 237   1      }
 238          
 239          void lcd_write_com(unsigned char com)
 240          {
 241   1        lcdrs=0;
C51 COMPILER V9.52.0.0   MAIN                                                              04/21/2015 13:47:48 PAGE 5   

 242   1        P0=com;
 243   1        delay(5);
 244   1        lcden=1;
 245   1        delay(5);
 246   1        lcden=0;
 247   1      }
 248          
 249          void lcd_write_data(unsigned char date)
 250          {
 251   1        lcdrs=1;
 252   1        P0=date;
 253   1        delay(5);
 254   1        lcden=1;
 255   1        delay(5);
 256   1        lcden=0;
 257   1      }
 258          void lcd_init()
 259          {
 260   1        lcdrs = 0;
 261   1        lcdrw = 0;
 262   1        lcden=0;
 263   1        lcd_write_com(0x38);
 264   1        lcd_write_com(0x0e);
 265   1        lcd_write_com(0x06);
 266   1        lcd_write_com(0x01);
 267   1        lcd_write_com(0x80+0x10);
 268   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    766    ----
   CONSTANT SIZE    =     70    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
